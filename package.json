{
  "name": "mathjax-full",
  "version": "4.0.0-beta.3",
  "description": "Beautiful and accessible math in all browsers. MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all browsers and in server-side node applications. This package includes the source code as well as the packaged components.",
  "keywords": [
    "MathJax",
    "math",
    "svg",
    "HTML",
    "MathML",
    "TeX",
    "AsciiMath"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    "MathJax Consortium <info@mathjax.org> (http://www.mathjax.org)"
  ],
  "bugs": {
    "url": "http://github.com/mathjax/MathJax/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mathjax/Mathjax-src/"
  },
  "type": "module",
  "main": "components/mjs/node-main/node-main.js",
  "exports": {
    ".": {
      "import": "./bundle/node-main.mjs",
      "require": "./bundle/node-main.cjs"
    },
    "./source": {
      "import": "./components/mjs/node-main/node-main.mjs",
      "require": "./components/cjs/node-main/node-main.cjs"
    },
    "./js/*": {
      "import": "./mjs/*",
      "require": "./cjs/*"
    },
    "./components/src/*": {
      "import": "./components/mjs/*",
      "require": "./components/cjs/*"
    },
    "./es5/*": "./bundle/*",
    "./*": "./*"
  },
  "imports": {
    "#js/*": "mathjax-full/mjs/*",
    "#source/*": "mathjax-full/components/mjs/*",
    "#root/*": "mathjax-full/mjs/components/mjs/*",
    "#menu/*": "mj-context-menu/js/*",
    "#sre/*": "speech-rule-engine/js/*",
    "#mhchem/*": "mhchemparser/esm/*",
    "#default-font/*": "mathjax-modern-font/mjs/*"
  },
  "files": [
    "/bundle",
    "/cjs",
    "/mjs",
    "/ts",
    "/components",
    "LICENSE",
    "README.md",
    "CONTRIBUTING.md",
    "tsconfig*"
  ],
  "scripts": {
    "clean:dir": "clean() { npx rimraf $1; }; clean",
    "clean:lib": "clean() { npx rimraf -g components/$1'/**/lib'; }; clean",
    "clean:mod": "clean() { npm run -s clean:dir $1 && npm run -s clean:lib $1; }; clean",
    "clean": "npm run -s clean:mod cjs && npm run -s clean:mod mjs && npm run -s clean:dir bundle",
    "clean:cjs": "npx rimraf components/cjs",
    "=============================================================================== copy": "",
    "copy:mj2": "copy() { npx copyfiles -u 1 'ts/input/asciimath/legacy/**/*' $1; }; copy",
    "copy:mml3": "copy() { npx copyfiles -u 1 ts/input/mathml/mml3/mml3.sef.json $1; }; copy",
    "copy:pkg": "npx copyfiles -u 2 components/bin/package.json",
    "copy:cjs": "npx copyfiles -u 2 'components/mjs/**/*' components/cjs",
    "=============================================================================== src": "",
    "presrc:cjs": "echo 'Compiling component files' && npm run -s clean:cjs",
    "src:cjs": "npx tsc --project tsconfig/components.json",
    "postsrc:cjs": "npm run -s src:copy && npm run -s copy:pkg components/cjs && npm run -s clean:lib cjs",
    "src:copy": "npx copyfiles -u 2 -e 'components/mjs/**/*.js' 'components/mjs/**/*' components/cjs",
    "=============================================================================== compile": "",
    "_cjs:pkg": "npm run -s copy:pkg cjs",
    "_mjs:pkg": "",
    "_pre_compile": "pre() { npm run clean:dir $1; }; pre",
    "_compile": "comp() { npx tsc --project tsconfig/$1.json; }; comp",
    "_post_compile": "post() { npm run -s copy:mj2 $1 && npm run -s copy:mml3 $1 && npm run -s _$1:pkg; }; post",
    "_compile_": "comp() { npm run _pre_compile $1; npm run _compile $1; npm run _post_compile $1; }; comp",
    "compile-cjs": "npm run -s _compile_ cjs && npm run src:cjs",
    "compile-mjs": "npm run -s _compile_ mjs",
    "compile": "npm run compile-mjs",
    "=============================================================================== components": "",
    "make-one": "make() { components/bin/makeAll --no-subdirs $3 $4 --$2 components/$2/$1; }; make",
    "_bundle:pkg": "pkg() { echo '{\n  \"type\": \"commonjs\"\n}' > bundle$1/package.json; }; pkg",
    "_bundle--build:pkg": "",
    "_pre_make": "pre() { npm run clean:dir bundle$2 && npm run clean:lib $1; }; pre",
    "_make": "make() { components/bin/makeAll --$1 --terse $2 $3 components/$1; }; make",
    "_make_": "m() { npm run -- _pre_make $1 $2 && npm run -- _make $1 $3 $4 && npm run -- _bundle$4:pkg $2; }; m",
    "make-cjs-components": "npm run -s -- _make_ cjs -cjs --bundle-cjs",
    "make-mjs-components": "npm run -s -- _make_ mjs",
    "make-components": "npm run -s make-mjs-components",
    "=============================================================================== build": "",
    "pre_build": "echo 'Compiling typescript files'",
    "_build": "build() { npm run compile-$1 && echo && npm run -- make-$1-components $2; }; build",
    "_build_": "b() { echo '============='; echo Building $1:; echo '============='; npm run -- _build $1 $2; }; b",
    "build-cjs": "npm run -s -- _build_ cjs --build",
    "build-mjs": "npm run -s -- _build_ mjs",
    "build": "npm run -s build-mjs",
    "build-all": "npm run -s build-mjs ; echo ; npm run -s build-cjs",
    "=============================================================================== mml3": "",
    "premake-mml3-xslt": "grep '^\\s*\\(<\\|or\\|xmlns\\|excl\\|\">\\)' ts/input/mathml/mml3/mml3.ts > /tmp/mml3.xsl",
    "make-mml3-xslt": "npx xslt3 -t -xsl:/tmp/mml3.xsl -export:ts/input/mathml/mml3/mml3.sef.json -nogo",
    "postmake-mml3-xslt": "npx rimraf /tmp/mml3.xsl",
    "=============================================================================== install": "",
    "link:full": "node components/bin/link-full",
    "install": "npm run -s link:full",
    "use-cjs": "echo '{\n  \"extends\": \"./tsconfig/cjs.json\"\n}' > tsconfig.json",
    "use-mjs": "echo '{\n  \"extends\": \"./tsconfig/mjs.json\"\n}' > tsconfig.json"
  },
  "devDependencies": {
    "copyfiles": "^2.4.1",
    "diff": "^5.1.0",
    "rimraf": "^5.0.1",
    "tape": "^5.6.3",
    "terser-webpack-plugin": "^5.3.9",
    "tslint": "^6.1.3",
    "tslint-jsdoc-rules": "^0.2.0",
    "tslint-unix-formatter": "^0.2.0",
    "typescript": "^5.1.3",
    "typescript-tools": "^0.3.1",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "mathjax-modern-font": "^4.0.0-beta.3",
    "mhchemparser": "^4.2.1",
    "mj-context-menu": "^0.9.1",
    "speech-rule-engine": "^4.1.0-beta.7"
  }
}
